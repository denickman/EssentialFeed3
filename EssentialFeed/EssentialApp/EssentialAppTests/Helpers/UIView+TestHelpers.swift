//
//  UIView+TestHelpers.swift
//  EssentialAppTests
//
//  Created by Denis Yaremenko on 17.02.2025.
//

import UIKit

/// изменения в UI, такие как изменение размеров или расположения элементов, не приводят к немедленной переработке макета `(layout)` и отрисовке `(render)`. Вместо этого эти изменения накапливаются и применяются в следующем цикле `RunLoop`. В результате, изменения могут быть отложены на некоторое время, до следующего обновления экрана или до тех пор, пока не будет выполнен вызов `layoutIfNeeded()`.

/// После асинхронных операций: В случае, когда вы делаете асинхронные изменения, такие как обновление UI после получения данных с сервера, вам нужно убедиться, что изменения в интерфейсе применяются до того, как UI начнет перерисовываться.    `layoutIfNeeded()` вызывает немедленное обновление, но `RunLoop.current.run(until: Date())` обеспечивает, что эти изменения будут завершены и учтены до следующего цикла.

 /// Комбинированный вызов с `RunLoop.current.run(until: Date()):` это необходимо, когда вы хотите, чтобы изменения немедленно вступили в силу, а также гарантировать, что UI полностью обновлен и готов к следующей операции, особенно если вы работаете с асинхронными или отложенными процессами (например, загрузка данных, анимации, динамические обновления).

 extension UIView {
     func enforceLayoutCycle() {
         layoutIfNeeded()
         RunLoop.current.run(until: Date())
     }
 }
